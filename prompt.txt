Crear un sistema de auto-instalación que configure automáticamente el MCP Bridge en proyectos Unity.

CONTEXTO:
- El MCP Bridge debe instalarse automáticamente al abrir el proyecto
- Configuración debe ser transparente para el usuario
- Mantener compatibilidad con diferentes versiones de Unity

REQUISITOS:

1. UNITY PACKAGE CREATOR:
   Crear herramienta para empaquetar MCP Bridge:
   python
   class UnityPackageBuilder:
       def create_package(source_dir: str, output_path: str)
       def add_dependencies(package_path: str, deps: List[str])
       def sign_package(package_path: str, certificate: str)
       def create_installer_script()
       def validate_package(package_path: str)

2. AUTO-INSTALLER SCRIPT:
   Assets/Editor/MCPBridge/Installer/AutoInstaller.cs:
   csharp
   [InitializeOnLoad]
   public class MCPAutoInstaller
   {
       private const string VERSION = "1.0.0";
       private static readonly string MARKER_FILE = ".mcp_installed";
       
       static MCPAutoInstaller() 
       {
           EditorApplication.delayCall += CheckAndInstall;
       }
       
       private static void CheckAndInstall()
       {
           if (!IsInstalled()) {
               ShowWelcomeWindow();
               InstallCore();
               ConfigureSettings();
               RunPostInstall();
               CreateMarkerFile();
           } else {
               CheckForUpdates();
           }
       }
       
       private static void InstallCore() {
           // 1. Copy MCP scripts
           // 2. Import required packages
           // 3. Configure project settings
           // 4. Setup WebSocket server
           // 5. Create menu items
       }
   }

3. WELCOME WINDOW:
   EditorWindow con wizard de configuración:
   csharp
   public class MCPWelcomeWindow : EditorWindow
   {
       private InstallationOptions options;
       
       void OnGUI() {
           // Logo y descripción
           // Opciones de instalación
           // Selección de puerto
           // Configuración de Blender
           // Botón Install/Skip
       }
   }

4. DEPENDENCY RESOLVER:
   Sistema para manejar dependencias:
   csharp
   public class DependencyResolver
   {
       public static void CheckDependencies() {
           // Check Newtonsoft.Json
           // Check Unity version
           // Check required packages
           // Install missing deps
       }
       
       private static void InstallPackage(string packageId) {
           UnityEditor.PackageManager.Client.Add(packageId);
       }
   }

5. CONFIGURATION MIGRATOR:
   Migrar configuración entre versiones:
   csharp
   public class ConfigurationMigrator
   {
       public static void Migrate(Version from, Version to) {
           // Load old config
           // Transform to new format
           // Backup old config
           // Save new config
       }
   }

6. HEALTH CHECK SYSTEM:
   Verificación post-instalación:
   csharp
   public class MCPHealthCheck
   {
       public static HealthReport RunDiagnostics() {
           var report = new HealthReport();
           report.Add(CheckWebSocketServer());
           report.Add(CheckFilePermissions());
           report.Add(CheckPortAvailability());
           report.Add(CheckBlenderConnection());
           return report;
       }
   }

7. UNINSTALLER:
   Limpieza completa si necesario:
   csharp
   public class MCPUninstaller
   {
       [MenuItem("MCP Bridge/Uninstall")]
       public static void Uninstall() {
           if (EditorUtility.DisplayDialog("Uninstall MCP Bridge?", 
               "This will remove all MCP components", "Yes", "No")) {
               RemoveScripts();
               RemoveSettings();
               CleanupCache();
               AssetDatabase.Refresh();
           }
       }
   }

PACKAGE STRUCTURE:
MCPBridge.unitypackage
├── Editor/
│   ├── MCPBridge/
│   │   ├── Core/
│   │   ├── Installer/
│   │   ├── Tools/
│   │   └── WebSocket/
│   └── Dependencies/
│       └── Newtonsoft.Json.dll
├── Documentation/
├── Examples/
└── package.json

CRITERIOS DE ACEPTACIÓN:
- No requiere intervención manual
- Compatible Unity 2021.3+
- Rollback si falla instalación
- Update sin perder configuración
- Health check 100% pass rate