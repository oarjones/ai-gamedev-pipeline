T10 — Streaming real de stdout y envío a UI por WebSocket (CHAT + EVENTS) 

Contexto: send() devuelve una sola línea. Necesitamos stream token/line-by-line y publicar Envelope type=chat (role=agent) o type=event. 
 Objetivo: Implementar lectura incremental en AgentRunner.send() y/o un lector continuo (task background) que empuje líneas a ChatService._broadcast_chat. 
 Alcance y tareas: 

Añadir un reader task que lea stdout.readline() en bucle y emita eventos con correlationId. 

Para send(text), escribir la línea y no bloquear hasta respuesta completa; el reader se encarga. 

Diferenciar marcas del CLI: p. ej. líneas con prefijo JSON: para tool-calls → enrutar como type=tool. 

Mapear stderr a type=log con level=error|warn. 
 Entradas/Salidas: Entrada: text; Salida inmediata: ack {queued:true,msgId}; stream WS: múltiples envelopes. 
 Aceptación: 

Enviar “hola” produce varios chat agent (simulados) y aparecen en /api/v1/chat/history. 

stderr se ve como log. 
 Notas: Serializa E/S con un lock por write; el reader es único; maneja cierre limpio y reconexión